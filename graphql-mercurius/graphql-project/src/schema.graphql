# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Article {
  id: ID!
  title: String!
  content: String!
  status: ArticleStatus
  user_id: Int
  created_at: DateTime
  updated_at: DateTime
  users: users
}

enum ArticleStatus {
  draft
  published
  private
  deleted
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CustomerAddress {
  id: ID!
  customer_id: Int!
  address_line1: String!
  address_line2: String
  city: String!
  state: String!
  postal_code: String!
  country: String!
  created_at: DateTime
  updated_at: DateTime
  customers: Customer!
}

type CustomerCount {
  customer_addresses: Int!
}

type Customer {
  id: ID!
  user_id: Int!
  address: String
  phone: String
  created_at: DateTime
  updated_at: DateTime
  customer_addresses: [CustomerAddress!]
  users: users!
  _count: CustomerCount!
}

type OrderItem {
  order_id: Int!
  product_id: Int!
  quantity: Int!
  price: Decimal!
  created_at: DateTime
  updated_at: DateTime
  orders: orders!
  products: Product!
}

"""An arbitrary-precision Decimal type"""
scalar Decimal

type payments {
  id: ID!
  order_id: Int
  amount: Decimal!
  payment_method: String!
  payment_status: String!
  created_at: DateTime
  updated_at: DateTime
  orders: orders
}

type OrdersCount {
  order_items: Int!
  payments: Int!
}

type orders {
  id: ID!
  user_id: Int
  status: orders_status!
  total: Decimal!
  created_at: DateTime
  updated_at: DateTime
  order_items: [OrderItem!]
  users: users
  payments: [payments!]
  _count: OrdersCount!
}

enum orders_status {
  pending
  processing
  completed
  cancelled
}

type UsersCount {
  articles: Int!
  carts: Int!
  orders: Int!
}

type users {
  id: ID!
  name: String!
  username: String!
  email: String!
  hashed_password: String!
  created_at: DateTime
  updated_at: DateTime
  articles: [Article!]
  carts: [carts!]
  customers: Customer
  orders: [orders!]
  _count: UsersCount!
}

type CartsCount {
  cart_items: Int!
}

type carts {
  id: ID!
  user_id: Int
  created_at: DateTime
  updated_at: DateTime
  cart_items: [cart_items!]
  users: users
  _count: CartsCount!
}

type cart_items {
  id: ID!
  cart_id: Int
  product_id: Int
  quantity: Int!
  created_at: DateTime
  updated_at: DateTime
  carts: carts
  products: Product
}

type CategoryCount {
  product_categories: Int!
}

type Category {
  id: ID!
  name: String!
  created_at: DateTime
  updated_at: DateTime
  product_categories: [ProductCategory!]
  _count: CategoryCount!
}

type ProductCategory {
  product_id: Int!
  category_id: Int!
  categories: Category!
  products: Product!
}

type ProductCount {
  cart_items: Int!
  order_items: Int!
  product_categories: Int!
}

type Product {
  id: ID!
  name: String!
  description: String
  status: products_status
  price: Decimal!
  stock: Int!
  created_at: DateTime
  updated_at: DateTime
  cart_items: [cart_items!]
  order_items: [OrderItem!]
  product_categories: [ProductCategory!]
  _count: ProductCount!
}

enum products_status {
  active
  inactive
  deleted
  out_of_stock
  in_stock
  running_low
}

type Query {
  products: [Product!]!
  product(id: Int!): Product!
  cartItems: [cart_items!]!
  cartItem(id: Int!): cart_items!
  orderItems: [OrderItem!]!
  orderItem(id: Int!): OrderItem!
  productCategories: [ProductCategory!]!
  productCategory(id: Int!): ProductCategory!
  articles: [Article!]!
  article(id: Int!): Article!
  carts: [carts!]!
  cart(id: Int!): carts!
  categories: [Category!]!
  category(id: Int!): Category!
  customerAddresses: [CustomerAddress!]!
  customerAddress(id: Int!): CustomerAddress!
  customers: [Customer!]!
  customer(id: Int!): Customer!
  orders: [orders!]!
  order(id: Int!): orders!
  payments: [payments!]!
  payment(id: Int!): payments!
  users: [users!]!
  user(id: Int!): users!
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
  createCartItem(createCartItemInput: CreateCartItemInput!): cart_items!
  updateCartItem(updateCartItemInput: UpdateCartItemInput!): cart_items!
  removeCartItem(id: Int!): cart_items!
  createOrderItem(createOrderItemInput: CreateOrderItemInput!): OrderItem!
  updateOrderItem(updateOrderItemInput: UpdateOrderItemInput!): OrderItem!
  removeOrderItem(id: Int!): OrderItem!
  createProductCategory(createProductCategoryInput: CreateProductCategoryInput!): ProductCategory!
  updateProductCategory(updateProductCategoryInput: UpdateProductCategoryInput!): ProductCategory!
  removeProductCategory(id: Int!): ProductCategory!
  createArticle(createArticleInput: CreateArticleInput!): Article!
  updateArticle(updateArticleInput: UpdateArticleInput!): Article!
  removeArticle(id: Int!): Article!
  createCart(createCartInput: CreateCartInput!): carts!
  updateCart(updateCartInput: UpdateCartInput!): carts!
  removeCart(id: Int!): carts!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category!
  createCustomerAddress(createCustomerAddressInput: CreateCustomerAddressInput!): CustomerAddress!
  updateCustomerAddress(updateCustomerAddressInput: UpdateCustomerAddressInput!): CustomerAddress!
  removeCustomerAddress(id: Int!): CustomerAddress!
  createCustomer(createCustomerInput: CreateCustomerInput!): Customer!
  updateCustomer(updateCustomerInput: UpdateCustomerInput!): Customer!
  removeCustomer(id: Int!): Customer!
  createOrder(createOrderInput: CreateOrderInput!): orders!
  updateOrder(updateOrderInput: UpdateOrderInput!): orders!
  removeOrder(id: Int!): orders!
  createPayment(createPaymentInput: CreatePaymentInput!): payments!
  updatePayment(updatePaymentInput: UpdatePaymentInput!): payments!
  removePayment(id: Int!): payments!
  createUser(createUserInput: CreateUserInput!): users!
  updateUser(updateUserInput: UpdateUserInput!): users!
  removeUser(id: Int!): users!
}

input CreateProductInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateProductInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCartItemInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCartItemInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateOrderItemInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateOrderItemInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateProductCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateProductCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateArticleInput {
  title: String!
  content: String!
  status: ArticleStatus
  created_at: DateTime
  updated_at: DateTime
}

input UpdateArticleInput {
  title: String
  content: String
  status: ArticleStatus
  created_at: DateTime
  updated_at: DateTime
  id: Int!
}

input CreateCartInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCartInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCustomerAddressInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCustomerAddressInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCustomerInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCustomerInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateOrderInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateOrderInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreatePaymentInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdatePaymentInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateUserInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateUserInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}